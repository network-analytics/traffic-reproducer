pcap:
  - examples/pcaps/ipfix-bmp-scenario-PART1-bmp-init-and-peer-ups.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART2-bmp-route-monitoring-updates.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART3-bmp-loc-rib-peer-down.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART4-bmp-route-monitoring-withdrawals-updates.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART5-ipfix-traffic.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART6-bmp-loc-rib-peer-up.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART7-bmp-global-peer-down.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART8-bmp-global-peer-up.pcap
  - examples/pcaps/ipfix-bmp-scenario-PART9-ipfix-traffic-2.pcap

time_factor: 1                            # multiplicative factor for speed (2 = twice as slow)
keep_open: true                           # set to true to not stop application (-> keep sockets open)
no_sync: true                             # set to true to start reproducing right away (-> don't wait to sync to next full_minute)

optimize:
  threading: false                        # assign one peer per thread -> we can process packet while sending. No order guarantee between peers
  preload: false                          # preload pcap in memory. Faster but more ram used. Often not useful
  network:
    so_sndbuf: null                       # max possible: cat /proc/sys/net/core/wmem_max - send buffer - null for default
    so_rcvbuf: null

network:
  map:                                    # map a src IP to a new source IP used for repro
  - src_ip:           2001:db8:90::1
    repro_ip:         cafe::1

  interface: null                         # to use a VRF, give the vrf name

bmp:
  select:
    tcp:
      dport:
      - 1790
  collector:                              # collector that will receive the reproduced messages
    ip: localhost
    port: 1791

ipfix:
  select:
    udp:
      dport:
      - 9991
  collector:
    ip: localhost
    port: 9992
